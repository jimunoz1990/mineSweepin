'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.applyStaticStyles = exports.withRenderer = exports.withTheme = exports.capitalize = exports.createComponentStyles = exports.combineRules = exports.connect = exports.ThemeProvider = exports.applyTheme = exports.createComponent = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint-disable behance/no-deprecated */
// eslint-disable-line behance/no-deprecated


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _fela = require('fela');

var _reactFela = require('react-fela');

var _underscore = require('underscore.string');

var _mergeThemes = require('./mergeThemes');

var _mergeThemes2 = _interopRequireDefault(_mergeThemes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const createComponent = (rule, type = 'div', passThroughProps = []) => (0, _reactFela.createComponent)(rule, type, type.propTypes ? passThroughProps.concat(Object.keys(type.propTypes)) : passThroughProps);

const applyTheme = (ComponentToWrap, ...themes) => {
  class ThemedComponent extends _react.Component {
    render() {
      return _react2.default.createElement(
        _reactFela.ThemeProvider,
        { theme: (0, _mergeThemes2.default)(this.props.theme || {}, ...themes) },
        _react2.default.createElement(ComponentToWrap, this.props)
      );
    }
  }

  ThemedComponent._isFelaComponent = true;
  ThemedComponent.displayName = `Themed${ComponentToWrap.displayName}`;
  ThemedComponent.propTypes = {
    theme: _propTypes2.default.object
  };
  return (0, _reactFela.withTheme)(ThemedComponent);
};

const withRenderer = ComponentToWrap => {
  class WithRendererComponent extends _react.Component {
    render() {
      return _react2.default.createElement(ComponentToWrap, _extends({ renderer: this.context.renderer }, this.props));
    }
  }
  WithRendererComponent.displayName = `WithRenderer${ComponentToWrap.displayName}`;
  WithRendererComponent.contextTypes = { renderer: _propTypes2.default.object };
  return WithRendererComponent;
};

const createComponentStyles = (styleFunctions, component) => (0, _reactFela.connect)(styleFunctions)(component);

const applyStaticStyles = (staticStyles, ComponentToWrap) => {
  class CompWithStaticStyles extends _react2.default.PureComponent {
    componentWillMount() {
      const contextTheme = this.props.theme || {};
      staticStyles = typeof staticStyles === 'function' ? staticStyles(contextTheme) : staticStyles;
      this.context.renderer.renderStatic(staticStyles);
    }

    render() {
      return _react2.default.createElement(ComponentToWrap, this.props);
    }
  }

  CompWithStaticStyles.contextTypes = {
    renderer: _propTypes2.default.object
  };

  CompWithStaticStyles.propTypes = {
    theme: _propTypes2.default.object
  };

  return (0, _reactFela.withTheme)(CompWithStaticStyles);
};

exports.createComponent = createComponent;
exports.applyTheme = applyTheme;
exports.ThemeProvider = _reactFela.ThemeProvider;
exports.connect = _reactFela.connect;
exports.combineRules = _fela.combineRules;
exports.createComponentStyles = createComponentStyles;
exports.capitalize = _underscore.capitalize;
exports.withTheme = _reactFela.withTheme;
exports.withRenderer = withRenderer;
exports.applyStaticStyles = applyStaticStyles;