import PropTypes from 'prop-types';
import { mount as enzymeMount } from 'enzyme';
import createRenderer from './createRenderer';
import { renderToString } from 'fela-tools';
import toJson from 'enzyme-to-json';
import cssbeautify from 'cssbeautify';
import { variables as themeConstants } from 'cf-style-const'; // eslint-disable-line behance/no-deprecated
import { createTheme, THEME_CHANNEL } from 'fela-bindings';

const mount = (node, options = {}) => {
  const renderer = createRenderer({
    dev: true
  });

  const wrapper = enzymeMount(node, {
    childContextTypes: {
      [THEME_CHANNEL]: PropTypes.object,
      renderer: PropTypes.object
    },
    contextTypes: {
      [THEME_CHANNEL]: PropTypes.object,
      renderer: PropTypes.object
    },
    context: {
      renderer,
      [THEME_CHANNEL]: createTheme(themeConstants)
    },
    ...options
  });

  const snapshot = wrapper => {
    const options = {
      indent: '  ',
      openbrace: 'end-of-line',
      autosemicolon: false
    };

    return {
      component: toJson(wrapper),
      styles: `\n${cssbeautify(renderToString(renderer), options)}\n`
    };
  };

  return {
    wrapper,
    snapshot
  };
};

export default mount;
